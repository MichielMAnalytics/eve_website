{"ast":null,"code":"var _jsxFileName = \"/Users/hidde/Documents/Landingpage/components/AnimatedLines.js\";\nimport React, { useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedLines = () => {\n  const screenWidth = Dimensions.get('window').width;\n  const screenHeight = Dimensions.get('window').height;\n  const line1 = useRef(new Animated.Value(-400)).current;\n  const line2 = useRef(new Animated.Value(-400)).current;\n  const line3 = useRef(new Animated.Value(-400)).current;\n  const verticalPos1 = useRef(new Animated.Value(0)).current;\n  const verticalPos2 = useRef(new Animated.Value(0)).current;\n  const verticalPos3 = useRef(new Animated.Value(0)).current;\n  const generatePath = () => {\n    const direction = Math.floor(Math.random() * 3);\n    const turnPoint = Math.random() * 0.7 + 0.15;\n    return {\n      direction,\n      turnPoint\n    };\n  };\n  const paths = [generatePath(), generatePath(), generatePath()];\n  const animateLine = (lineAnim, verticalAnim, path, delay = 0) => {\n    const duration = 4400;\n    const sequence = [];\n    if (path.direction === 0) {\n      sequence.push(Animated.timing(lineAnim, {\n        toValue: screenWidth + 400,\n        duration,\n        useNativeDriver: true\n      }));\n    } else {\n      const horizontalDuration = duration * path.turnPoint;\n      const verticalDuration = duration * (1 - path.turnPoint);\n      const verticalDistance = path.direction === 1 ? -screenHeight : screenHeight;\n      sequence.push(Animated.parallel([Animated.sequence([Animated.timing(lineAnim, {\n        toValue: screenWidth * path.turnPoint,\n        duration: horizontalDuration,\n        useNativeDriver: true\n      }), Animated.timing(lineAnim, {\n        toValue: screenWidth * path.turnPoint,\n        duration: verticalDuration,\n        useNativeDriver: true\n      })]), Animated.sequence([Animated.timing(verticalAnim, {\n        toValue: 0,\n        duration: horizontalDuration,\n        useNativeDriver: true\n      }), Animated.timing(verticalAnim, {\n        toValue: verticalDistance,\n        duration: verticalDuration,\n        useNativeDriver: true\n      })])]));\n    }\n    sequence.push(Animated.timing(lineAnim, {\n      toValue: -400,\n      duration: 0,\n      useNativeDriver: true\n    }));\n    Animated.loop(Animated.sequence(sequence)).start();\n  };\n  useEffect(() => {\n    animateLine(line1, verticalPos1, paths[0], 0);\n    animateLine(line2, verticalPos2, paths[1], 1500);\n    animateLine(line3, verticalPos3, paths[2], 3000);\n  }, []);\n  const renderLine = (lineAnim, verticalAnim, path, index) => {\n    const baseStyle = {\n      transform: [{\n        translateX: lineAnim\n      }, {\n        translateY: verticalAnim\n      }]\n    };\n    return _jsxDEV(Animated.View, {\n      style: [styles.line, baseStyle, {\n        top: `${25 + index * 20}%`\n      }]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [renderLine(line1, verticalPos1, paths[0], 0), renderLine(line2, verticalPos2, paths[1], 1), renderLine(line3, verticalPos3, paths[2], 2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    pointerEvents: 'none'\n  },\n  line: {\n    position: 'absolute',\n    width: 200,\n    height: 4,\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    borderTopWidth: 4,\n    borderStyle: 'dotted',\n    borderColor: '#F4E409',\n    opacity: 0.3,\n    borderRadius: 2,\n    marginLeft: 20,\n    marginRight: 20\n  }\n});\nexport default AnimatedLines;","map":{"version":3,"names":["React","useEffect","useRef","View","Animated","StyleSheet","Dimensions","jsxDEV","_jsxDEV","AnimatedLines","screenWidth","get","width","screenHeight","height","line1","Value","current","line2","line3","verticalPos1","verticalPos2","verticalPos3","generatePath","direction","Math","floor","random","turnPoint","paths","animateLine","lineAnim","verticalAnim","path","delay","duration","sequence","push","timing","toValue","useNativeDriver","horizontalDuration","verticalDuration","verticalDistance","parallel","loop","start","renderLine","index","baseStyle","transform","translateX","translateY","style","styles","line","top","fileName","_jsxFileName","lineNumber","columnNumber","container","children","create","position","left","right","bottom","pointerEvents","backgroundColor","borderWidth","borderTopWidth","borderStyle","borderColor","opacity","borderRadius","marginLeft","marginRight"],"sources":["/Users/hidde/Documents/Landingpage/components/AnimatedLines.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { View, Animated, StyleSheet, Dimensions } from 'react-native';\n\nconst AnimatedLines = () => {\n  const screenWidth = Dimensions.get('window').width;\n  const screenHeight = Dimensions.get('window').height;\n  const line1 = useRef(new Animated.Value(-400)).current;\n  const line2 = useRef(new Animated.Value(-400)).current;\n  const line3 = useRef(new Animated.Value(-400)).current;\n  const verticalPos1 = useRef(new Animated.Value(0)).current;\n  const verticalPos2 = useRef(new Animated.Value(0)).current;\n  const verticalPos3 = useRef(new Animated.Value(0)).current;\n\n  const generatePath = () => {\n    // 0: straight, 1: up, 2: down\n    const direction = Math.floor(Math.random() * 3);\n    const turnPoint = Math.random() * 0.7 + 0.15; // Turn between 15% and 85% of the way\n    return { direction, turnPoint };\n  };\n\n  const paths = [\n    generatePath(),\n    generatePath(),\n    generatePath(),\n  ];\n\n  const animateLine = (lineAnim, verticalAnim, path, delay = 0) => {\n    const duration = 4400;\n    const sequence = [];\n\n    if (path.direction === 0) {\n      // Straight line\n      sequence.push(\n        Animated.timing(lineAnim, {\n          toValue: screenWidth + 400,\n          duration,\n          useNativeDriver: true,\n        })\n      );\n    } else {\n      // Line with turn\n      const horizontalDuration = duration * path.turnPoint;\n      const verticalDuration = duration * (1 - path.turnPoint);\n      const verticalDistance = path.direction === 1 ? -screenHeight : screenHeight;\n\n      sequence.push(\n        Animated.parallel([\n          Animated.sequence([\n            Animated.timing(lineAnim, {\n              toValue: screenWidth * path.turnPoint,\n              duration: horizontalDuration,\n              useNativeDriver: true,\n            }),\n            Animated.timing(lineAnim, {\n              toValue: screenWidth * path.turnPoint,\n              duration: verticalDuration,\n              useNativeDriver: true,\n            }),\n          ]),\n          Animated.sequence([\n            Animated.timing(verticalAnim, {\n              toValue: 0,\n              duration: horizontalDuration,\n              useNativeDriver: true,\n            }),\n            Animated.timing(verticalAnim, {\n              toValue: verticalDistance,\n              duration: verticalDuration,\n              useNativeDriver: true,\n            }),\n          ]),\n        ])\n      );\n    }\n\n    sequence.push(\n      Animated.timing(lineAnim, {\n        toValue: -400,\n        duration: 0,\n        useNativeDriver: true,\n      })\n    );\n\n    Animated.loop(\n      Animated.sequence(sequence)\n    ).start();\n  };\n\n  useEffect(() => {\n    animateLine(line1, verticalPos1, paths[0], 0);\n    animateLine(line2, verticalPos2, paths[1], 1500);\n    animateLine(line3, verticalPos3, paths[2], 3000);\n  }, []);\n\n  const renderLine = (lineAnim, verticalAnim, path, index) => {\n    const baseStyle = {\n      transform: [\n        { translateX: lineAnim },\n        { translateY: verticalAnim },\n      ],\n    };\n\n    return (\n      <Animated.View\n        key={index}\n        style={[\n          styles.line,\n          baseStyle,\n          {\n            top: `${25 + index * 20}%`,\n          }\n        ]}\n      />\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      {renderLine(line1, verticalPos1, paths[0], 0)}\n      {renderLine(line2, verticalPos2, paths[1], 1)}\n      {renderLine(line3, verticalPos3, paths[2], 2)}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    pointerEvents: 'none',\n  },\n  line: {\n    position: 'absolute',\n    width: 200,\n    height: 4,\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    borderTopWidth: 4,\n    borderStyle: 'dotted',\n    borderColor: '#F4E409',\n    opacity: 0.3,\n    borderRadius: 2,\n    marginLeft: 20,\n    marginRight: 20,\n  },\n});\n\nexport default AnimatedLines; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}